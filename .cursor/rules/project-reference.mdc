---
description: 
globs: 
alwaysApply: true
---
# キーボード利用分析アプリ（コードネーム: KeyFit）企画仕様書

---

## 1. アプリ概要

| 項目        | 内容                                                                       |
| --------- | ------------------------------------------------------------------------ |
| **目的**    | ユーザーの実際のタイピングデータを可視化し、45%/60%/75%/TKL など最適なキーボードフォームファクタ選択を支援するデスクトップアプリ |
| **対象 OS** | Windows 10+（タスクトレイ常駐）、macOS 13+（メニューバー常駐）                                |
| **データ方針** | 完全ローカル保存・外部送信なし／時単位集計で個別文字列を特定不能にしプライバシー担保                               |
| **配布形態**  | Windows: MSIX ／ macOS: notarized DMG＋auto‑update                         |

---

## 2. ユーザーペルソナ

* **長時間タイピングを行うプログラマ・ライター・学生**
* **自作キーボード愛好家／サイズ迷い中のユーザー**

---

## 3. 主要機能（MVP）

| #   | 機能          | 詳細                                                      |
| --- | ----------- | ------------------------------------------------------- |
| 3.1 | 常駐モニタリング    | OS 起動時自動起動／トレイアイコンから *開く・監視停止/再開・終了*                    |
| 3.2 | キー入力捕捉      | すべてのキーをフックし **1 日**単位で SQLite に集計保存            |
| 3.3 | ヒートマップ      | レイアウト切替 (45/60/75/TKL)／キー別色分布／ダークライトテーマ自動切替 (MUI) |                     |
| 3.5 | 期間・アプリ別フィルタ | 今週／今月／全期間／カスタム＋アプリドロップダウン                               |
| 3.6 | 除外アプリ       | 監視対象外アプリ登録 UI                                           |
| 3.7 | データ管理       | DB リセット・インポート／エクスポート（db ファイル丸ごと）                        |
| 3.8 | 自動アップデート    | 差分更新 (Tauri Updater)／バージョン情報表示                          |

---

## 4. 非機能要件

* **プライバシー**: SQLCipher で暗号化 (オプション)／時刻丸めにより内容推定困難化
* **性能目標**: Idle CPU < 1%・RAM < 60 MB
* **セキュリティ**: Windows コード署名・macOS ノータリゼーション／権限プロンプトガイド表示
* **アクセシビリティ**: カラーブラインド配色プリセット (Color Brewer) 対応

---

## 5. 技術スタック

| レイヤ   | 採用技術                                           | メモ                                       |
| ----- | ---------------------------------------------- | ---------------------------------------- |
| UI    | React + TypeScript + MUI v7  | テーマトグル組込み済み                              |
| ホスト   | **Tauri 2.x** (Rust backend + WebView2/WebKit) | 軽量常駐／システムトレイ API 標準                      |
| キーフック | Rust `rdev` ライブラリ                              | WH\_KEYBOARD\_LL (Win) / Event Tap (mac) |
| DB    | SQLite (rusqlite)                              | SQLCipher 暗号化可                           |
| 図示    | d3/visx + SVG                                  | 60fps ヒートマップ描画                           |
| テスト   | Vitest (UI) / Rust unit test                   | Playwright より後期導入                        |

---

## 6. データモデル

```text
app (
  id INTEGER PK,
  name TEXT,
  bundle_id TEXT
)

key_stat (
  ts_day   INTEGER  ← Unix epoch (丸め)
  key_code  INTEGER
  app_id    INTEGER FK→app.id
  count     INTEGER
  PRIMARY KEY (ts_hour, key_code, app_id)
)

excluded_app (
  app_id INTEGER PK
)
```